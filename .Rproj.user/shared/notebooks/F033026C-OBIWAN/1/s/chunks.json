{"chunk_definitions":[{"chunk_id":"csetup_chunk","chunk_label":"setup","document_id":"F54A7997","expansion_state":0,"options":{"echo":false,"engine":"r","include":false,"label":"setup"},"row":68,"row_count":1,"visible":true},{"chunk_id":"cvy6xsumorab6","chunk_label":"unnamed-chunk-1","document_id":"F54A7997","expansion_state":0,"options":{"engine":"r","eval":true,"label":"unnamed-chunk-1"},"row":80,"row_count":1,"visible":true},{"chunk_id":"cwtonp1h9ojn2","chunk_label":"clean","document_id":"F54A7997","expansion_state":0,"options":{"echo":false,"engine":"r","include":false,"label":"clean"},"row":87,"row_count":1,"visible":true},{"chunk_id":"c8xy47dx3rwef","chunk_label":"options","document_id":"F54A7997","expansion_state":0,"options":{"echo":false,"engine":"r","include":false,"label":"options"},"row":96,"row_count":1,"visible":true},{"chunk_id":"c4ex1r9h9usts","chunk_label":"unnamed-chunk-2","document_id":"F54A7997","expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-2"},"row":106,"row_count":1,"visible":true},{"chunk_id":"c3gatbsle5s7t","chunk_label":"unnamed-chunk-3","document_id":"F54A7997","expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-3"},"row":114,"row_count":1,"visible":true},{"chunk_id":"c9ozd9uduca4i","chunk_label":"unnamed-chunk-4","document_id":"F54A7997","expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-4"},"row":123,"row_count":1,"visible":true},{"chunk_id":"cdjot8xpw7zyn","chunk_label":"unnamed-chunk-5","document_id":"F54A7997","expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-5"},"row":132,"row_count":1,"visible":true},{"chunk_id":"cpiksf23wyswe","chunk_label":"PAV_prepro","document_id":"F54A7997","expansion_state":0,"options":{"cache":false,"echo":false,"engine":"r","include":false,"label":"PAV_prepro"},"row":179,"row_count":1,"visible":true},{"chunk_id":"co6ziiv0g2rpv","chunk_label":"PAV_RT","document_id":"F54A7997","expansion_state":0,"options":{"cache":true,"echo":false,"engine":"r","include":false,"label":"PAV_RT"},"row":195,"row_count":1,"visible":true},{"chunk_id":"clvxtgpa6rme0","chunk_label":"unnamed-chunk-6","document_id":"F54A7997","expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-6"},"row":207,"row_count":1,"visible":true}],"default_chunk_options":{"echo":false},"doc_write_time":1607617895,"external_chunks":{"PREPROC":["# define as.factors","fac <- c(\"id\", \"trial\", \"condition\", \"group\" ,\"trialxcondition\", \"gender\")","PAV[fac] <- lapply(PAV[fac], factor)","","#revalue all catego","#PAV$group = as.factor(revalue(PAV$group, c(control=\"-1\", obese=\"1\"))) #change value of group","PAV$condition = as.factor(revalue(PAV$condition, c(CSminus=\"CS-\", CSplus=\"CS+\"))); #PAV$condition <- factor(PAV$condition, levels = c(\"1\", \"-1\"))#change value of condition","","#center covariates","numer <- c(\"piss\", \"thirsty\", \"hungry\", \"diff_piss\", \"diff_thirsty\", \"diff_hungry\", \"age\")","PAV = PAV %>% group_by %>% mutate_at(numer, scale)","","# get times in milliseconds ","PAV$RT               <- PAV$RT * 1000","","#Preprocessing","PAV$condition <- droplevels(PAV$condition, exclude = \"Baseline\")","acc_bef = mean(PAV$ACC, na.rm = TRUE) #0.93","full = length(PAV$RT)","","##shorter than 100ms and longer than 3sd+mean","PAV.clean <- filter(PAV, RT >= 100) # min RT is ","PAV.clean <- ddply(PAV.clean, .(id), transform, RTm = mean(RT))","PAV.clean <- ddply(PAV.clean, .(id), transform, RTsd = sd(RT))","PAV.clean <- filter(PAV.clean, RT <= RTm+3*RTsd) ","","# calculate the dropped data in the preprocessing","clean = length(PAV.clean$RT)","dropped = full-clean","(dropped*100)/full","","densityPlot(PAV.clean$RT) #RT are skewed ","","#log transform function","t_log_scale <- function(x){","  if(x==0){y <- 1}","  else {y <- (sign(x)) * (log(abs(x)))}","  y }","","PAV.clean$RT_T <- sapply(PAV.clean$RT,FUN=t_log_scale)","densityPlot(PAV.clean$RT_T) # much better ","","PAV = PAV.clean"],"clean":["#subset only pretest","tables <- c(\"PAV\",\"INST\",\"PIT\",\"HED\", \"intern\")","dflist <- lapply(mget(tables),function(x)subset(x, session == 'second'))","list2env(dflist, envir=.GlobalEnv)","","#exclude participants (242 really outlier everywhere, 256 can't do the task, 114 & 228 REALLY hated the solution and thus didn't \"do\" the conditioning) & 123 and 124 have imcomplete data","`%notin%` <- Negate(`%in%`)","dflist <- lapply(mget(tables),function(x)filter(x, id %notin% c(242, 256, 114, 228, 123, 124)))","list2env(dflist, envir=.GlobalEnv)","","#merge with info","tables = tables[-length(tables)] # remove intern","dflist <- lapply(mget(tables),function(x)merge(x, info, by = \"id\"))","list2env(dflist, envir=.GlobalEnv)","","# creates internal states variables for each data","listA = 2:5","def = function(data, number){","  baseINTERN = subset(intern, phase == number)","  data = merge(x = get(data), y = baseINTERN[ , c(\"piss\", \"thirsty\", 'hungry', 'id')], by = \"id\", all.x=TRUE)","  diffINTERN = subset(intern, phase == number | phase == number+1) #before and after ","  before = subset(diffINTERN, phase == number); after = subset(diffINTERN, phase == number+1); diff = after","  diff$diff_piss = diff$piss - before$piss","  diff$diff_thirsty = diff$thirsty - before$thirsty","  diff$diff_hungry = diff$hungry - before$hungry","  data= merge(data, y = diff[ , c(\"diff_piss\", \"diff_thirsty\", 'diff_hungry', 'id')], by = \"id\", all.x=TRUE)","  return(data)","}","dflist = mapply(def,tables,listA)","list2env(dflist, envir=.GlobalEnv)","","","# PAV PREPROC -------------------------------------------------------------"]},"working_dir":null}