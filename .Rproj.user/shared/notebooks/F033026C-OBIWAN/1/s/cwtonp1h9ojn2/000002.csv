"0","#subset only pretest"
"0","tables <- c(""PAV"",""INST"",""PIT"",""HED"", ""intern"")"
"0","dflist <- lapply(mget(tables),function(x)subset(x, session == 'second'))"
"0","list2env(dflist, envir=.GlobalEnv)"
"1","<environment: R_GlobalEnv>
"
"0","#exclude participants (242 really outlier everywhere, 256 can't do the task, 114 & 228 REALLY hated the solution and thus didn't ""do"" the conditioning) & 123 and 124 have imcomplete data"
"0","`%notin%` <- Negate(`%in%`)"
"0","dflist <- lapply(mget(tables),function(x)filter(x, id %notin% c(242, 256, 114, 228, 123, 124)))"
"0","list2env(dflist, envir=.GlobalEnv)"
"1","<environment: R_GlobalEnv>
"
"0","#merge with info"
"0","tables = tables[-length(tables)] # remove intern"
"0","dflist <- lapply(mget(tables),function(x)merge(x, info, by = ""id""))"
"0","list2env(dflist, envir=.GlobalEnv)"
"1","<environment: R_GlobalEnv>
"
"0","# creates internal states variables for each data"
"0","listA = 2:5"
"0","def = function(data, number){"
"0","  baseINTERN = subset(intern, phase == number)"
"0","  data = merge(x = get(data), y = baseINTERN[ , c(""piss"", ""thirsty"", 'hungry', 'id')], by = ""id"", all.x=TRUE)"
"0","  diffINTERN = subset(intern, phase == number | phase == number+1) #before and after "
"0","  before = subset(diffINTERN, phase == number); after = subset(diffINTERN, phase == number+1); diff = after"
"0","  diff$diff_piss = diff$piss - before$piss"
"0","  diff$diff_thirsty = diff$thirsty - before$thirsty"
"0","  diff$diff_hungry = diff$hungry - before$hungry"
"0","  data= merge(data, y = diff[ , c(""diff_piss"", ""diff_thirsty"", 'diff_hungry', 'id')], by = ""id"", all.x=TRUE)"
"0","  return(data)"
"0","}"
"0","dflist = mapply(def,tables,listA)"
"0","list2env(dflist, envir=.GlobalEnv)"
"1","<environment: R_GlobalEnv>
"
"0","# PAV PREPROC -------------------------------------------------------------"
