"0","# -------------------------------------- PREPROC ----------------------------------------"
"0",""
"0","# define as.factors"
"0","fac <- c(""id"", ""trial"", ""condition"", ""group"" ,""trialxcondition"", ""gender"")"
"0","PAV[fac] <- lapply(PAV[fac], factor)"
"0",""
"0","#revalue all catego"
"0","PAV$group = as.factor(revalue(PAV$group, c(control=""-1"", obese=""1""))) #change value of group"
"0","PAV$condition = as.factor(revalue(PAV$condition, c(CSminus=""-1"", CSplus=""1""))); PAV$condition <- factor(PAV$condition, levels = c(""1"", ""-1""))#change value of condition"
"0",""
"0","#center covariates"
"0","numer <- c(""piss"", ""thirsty"", ""hungry"", ""diff_piss"", ""diff_thirsty"", ""diff_hungry"", ""age"")"
"0","PAV = PAV %>% group_by %>% mutate_at(numer, scale)"
"0",""
"0","# get times in milliseconds "
"0","PAV$RT               <- PAV$RT * 1000"
"0",""
"0","#Preprocessing"
"0","PAV$condition <- droplevels(PAV$condition, exclude = ""Baseline"")"
"0","acc_bef = mean(PAV$ACC, na.rm = TRUE) #0.93"
"0","full = length(PAV$RT)"
"0",""
"0","##shorter than 100ms and longer than 3sd+mean"
"0","PAV.clean <- filter(PAV, RT >= 100) # min RT is "
"0","PAV.clean <- ddply(PAV.clean, .(id), transform, RTm = mean(RT))"
"0","PAV.clean <- ddply(PAV.clean, .(id), transform, RTsd = sd(RT))"
"0","PAV.clean <- filter(PAV.clean, RT <= RTm+3*RTsd) "
"0",""
"0","# calculate the dropped data in the preprocessing"
"0","clean = length(PAV.clean$RT)"
"0","dropped = full-clean"
"0","(dropped*100)/full"
"1","[1]"
"1"," 6.781609"
"1","
"
"0","densityPlot(PAV.clean$RT) #RT are skewed "
